---
title: "Migrational-temporal models of county-level health"
date: ""
author: "Hannah Olson-Williams"
format: 
  html:
    self-contained: true 
editor: visual
bibliography: references.bib
---

### Abstract

Although the relationship between place and health is well studied and measured, typical place-based measures of health are static, representing a single point in time without accounting for movement or mobility. Among the well-established understanding that place influences health is the understanding that place differentially impacts some groups of people more than others. What remains unknown is to what extent population migration explains place-based health and health disparities. Thus, there is a critical need to measure the degree to which county-level patterns in health factors and outcomes can be attributed to county-level patterns in mobility. Without such knowledge, we are unable to fully capture the complexities of county-level health, limiting our ability to inform local policy making.

This paper aims to provide understanding of the mechanisms by which mobility may be related to place-based health disparities so that local decision-makers may account for patterns in mobility when creating policy towards improved health for all people in all places. In this paper, we quantify and devise techniques for quantifying the relationship between county-level mobility and county-level health. Our central hypothesis is that poor county-level health factors and outcomes are associated with extremely high and extremely low rates of county-level mobility. Understanding rural-urban mobility patterns is a necessary first step towards understanding place-based health disparities.

### **Background and Significance**

Much of physical and mental health is place-based. There are well-established relationships between the built-environment and health outcomes. However, less is understood about how changes in place can affect health. Changes in place can occur both *to* and *by* people: when individuals relocate, not only do they experience a change in place, but they take their sociodemographic identities, income, health, employment, and education with them. As a result, the population, culture, and health of the place they are leaving and the place they are arriving changes, if only slightly. In aggregate, these migration-related changes could potentially change the health of the population as a whole. In this paper, we aim to measure the effects of migration on county-level measures of health.

As individuals move from one place to another, the resources in their counties of origin and destination change. Therefore, the relationship between health and place can be viewed as "mutually reinforcing and reciprocal"[@cummins2007]. For instance, when individuals relocate, they bring their social connections with them[@dehaas2010]. These social connections might lead to greater migration and more people (resources) in the future which could lead to better health outcomes on average and increased "pull" of the destination. The idea that migration can be self-perpetuating has been explored many times in the past[@dehaas2010a; @dehaas2021] mostly to describe "pull" factors -- factors that make a location more desirable after migration has occurred. The perceived average health of a community may be one of these "pull" factors.

Previous research has found that the health of migrants often differs from the average health of their origin and the average health of their destination. For instance, relocation from rural areas to urban areas has been associated with increased risk of CVD in some populations.[@miranda2011] Similarly, relocation to high-income countries has been associated with adverse cardiovascular health effects.[@agyemang2019] Several studies have found that rates of CVD are higher among migrants than among their peers who did not migrate.[@agyemang2022] For instance, a study of people who migrated to the US from Japan found that Japanese migrants to California had age-adjusted prevalence rates of CVD that were more than twice as high as their peers who migrated to Hawaii or did not migrate at all.[@marmot1975] This suggests that the average health of migratory populations becomes more similar to the average health of their destination than that of their origin, possibly because migrants take on the diets, habits, and other health factors of the place to which they relocate. Another possible explanation is that people who migrated from Japan to California were "pushed" to California while people who migrated from Japan to Hawaii were "pulled" to Hawaii.  

Income inequality has been found to be associated with poor health among some populations.[@zimmerman2006] Populations that experience high levels of income inequality may also experience declining rates of migration, as shown by Cooke 2013.[@cooke2013] Therefore, the effects of migration on health may be mediated by income inequality. Additionally, Lee's theory of migration suggests that regions with high levels of diversity are more likely to experience high rates of migration since migration is associated with imbalance between the origin and the destination and since diverse groups of people typically gravitate towards individuals like themselves.[@lee1966] Therefore, though perceived health may operate as a "pull" factor, not all people in a community are likely to experience improved health.  

There are many potential mechanisms by which urbanicity and the movement between rural and urban places could impact health. One might expect worse health in urban areas considering that limited access to green space [@tsai2018], concentration of populations marginalized from resources, crowded living conditions, and air pollution[@ha2017] are associated with negative health outcomes. On the other hand, urban populations are also more likely to have access to health care, more likely to participate in social organizations which offer psycho-social support [@yang2019], and more likely to have educational and financial opportunities [@ha2019], all of which are associated with positive health outcomes. A recently published paper assessing quality of life in Finland found higher rates of high quality of life in rural areas but not after controlling for perceived loneliness [@weckroth2022]. Another study found that people in urban areas have higher prevalence of both depression and anxiety despite having lower prevalence of other risk factors [@zijlema2015]. Disentangling the contribution of each of these potential mechanisms has important public health implications by pointing to possible solutions (e.g., increase access) for improving health. Relating migration to health in the US, however, requires confronting several challenges. Migration is a complex phenomenon, and its effects are impossible to isolate completely. There are many potential variables that confound the relationship between migration and health. Most notably, counties that differ in migration patterns will also differ in the sociodemographic makeup of their population in terms of distributions of racial identity, age, income, and education. Even controlling for observed sociodemographic differences, there may still be *unobserved* confounding variables. For example, some people may choose to live in urban places and others in rural environments. These choices could be influenced by the past and present sociocultural context of each community which affects who feels welcomed into which communities. Factors such as personality and familial ties play large roles in both health and choice of living location [@chan1977]. Thus, analyses and conclusions must be carefully crafted to account for the complexity of where people move and why.

According to Lee's theory of migration [@lee1966], migration is selective, meaning that the individuals who migrate are not a random sample of the population of the origin. Migration occurs in response to a "push" or a "pull" -- migrants are "pushed" to leave an origin and "pulled" to a destination. "Pull" factors are more often associated with positive selection; migrants who are "pulled" to a destination due to perceived benefits are more likely to have high income or education status. Contrarily, migrants who are "pushed" to leave an origin are likely to have faced hardship in some form. In some cases, this is a negatively selected group including individuals who have lost jobs or suffered from climate change events; in other cases, an entire population may be "pushed" to migrate due to war or famine. Migration is often bimodal in that only the most advantaged and the least advantaged individuals relocate. This logic could be extended to the health distribution of migrants: only the most and least healthy individuals migrate. According to Norman and colleagues, migrants who move from more resource depleted regions to less resource depleted regions have better health on average than the population in their destination while migrants who move from less depleted regions to more depleted regions have worse health on average than the population in their destination [@norman2005]. Additionally, when the barriers between origin and destination are particularly high, migrants are often healthier on average than the people living in their destination, either because they have been selected through the migration process or because unhealthy people are less likely to choose to move when the barriers are high [@halliday2008]. Without understanding the individual decisions or circumstances that lead to migration, we cannot assess whether changes in health are the result of a "push" or a "pull." Disentangling the directionality of changes in health versus changes in migration is one challenge of using county-level data.

Since we propose an ecological study using county-level data, we can only adjust for county-level differences and cannot attempt to measure individual-level differences. County-level data can be useful to understand how place is related to average health. In particular, county-level analyses may be useful in informing local policies to raise the *average* health of a county, and county-level sociodemographic analyses may be useful in informing local policies to reduce disparities within a county -- thus, county-level analyses are useful in addressing both of the primary goals of population health: increasing the health of the population overall and reducing health disparities [@kindig2017]. As we have seen during the COVID pandemic, local public health departments, school boards, and faith-based organizations have the power to make decisions which affect public health at an "average" level. County-level analyses may help local decision-makers understand the patterns and processes of their communities. Additionally, because we use a dataset which contains all 3142 US counties, rural counties are better represented than urban counties despite having smaller total population. We use county-level data because that is what is available, but also because we cannot know exactly which individuals are in each county at time 0 and at time 1, which results in treatment and outcome groups that differ at the individual-level but not at the county-level.

Of course there is information lost when using group-level data, and the downsides of such an ecological study design have been enumerated many times previously [@greenland1989]; however, by studying county-level data, we can draw attention to environmental county-level health factors - factors that are likely to have different effects when comparing individuals but may remain largely constant when comparing groups or counties. <!--# more here about ecological fallacy, maup, bimodal patterns??? -->

Traditional models of place-based ecological health typically account for both space and time but do not account for migration between locations. Previous uses of autoregressive models of county-level health include a 2011 paper in which each county's relative position to other counties as well as its historical mortality rates were considered when forecasting future county-level mortality rates[@yang2011]. Another similar paper used an autoregressive model with county-level estimates of mortality that were standardized for measures of income and employment, population density and rurality, and race/ethnicity [@sparks2010]. Similarly, early in the COVID-19 pandemic, researchers used a spatial autoregressive model to assess the relationships between county-level COVID-19 mortality rates and county-level sociodemographic characteristics [@fielding-miller2020]. This method has also been extended to age-group and country-level data to explain cohort effects within countries[@li2017b]. Finally, a 2021 paper adapted this method using age-group data to estimate country-level life expectancy more efficiently, more accurately, and with greater precision for younger populations[@shi2021]. In this paper, we propose a novel extension of traditional spatiotemporal methods that will account for migration in addition to space and time.

<!--# definition of place here -->

```{r baseline models with and without natality, include = FALSE, message = FALSE, warning = FALSE}

# note that this check for natality will need to be done again with spatial component 

library(tidyverse)
library(ggplot2)
library(lme4)
load("data_processed/migterm_imp.Rdata") 
#this dataset is called migurb
# it has natality, death, population, premature mortality rates, migration flows, rural/urb codes and two different precalculated migterms (one including natality and one not including natality)



migmodm = migterm_imp %>% arrange(lagyear) %>% 
  group_by(destid) %>% 
  filter(n_distinct(rate_d1)>4) #817 rows removed during this step 

natsub = migmodm[!is.na(migmodm$migterm_nat),]

mn = data.frame(natsub)

mnn = mn %>% 
 arrange(year) %>% 
 group_by(destid) %>% 
 mutate(t = row_number())

mnn$ft = as.factor(mnn$t)



#(1|fips) is a random intercept; each fips's reg line is shifted up/down randomly with mean 0
#(1+time|fips) includes a random slope for time; the effect of time differs randomly from fips to fips 

m_min = lme4::lmer(rate_d1 ~ ft + (1+t|destid) + rate_d0, data = mnn,
                control=lmerControl(optimizer="bobyqa",optCtrl=list(maxfun=2e5)))


m_min_mig = lme4::lmer(rate_d1 ~ ft + (1+t|destid) + rate_d0 + migterm, data = mnn,
                control=lmerControl(optimizer="bobyqa",optCtrl=list(maxfun=2e5)))

m_min_nat = lme4::lmer(rate_d1 ~ ft + (1+t|destid) + rate_d0 + migterm_nat, data = mnn,
                control=lmerControl(optimizer="bobyqa",optCtrl=list(maxfun=2e5)))



modelsummary::modelsummary(list("Baseline" = m_min, "With Migration Term" = m_min_mig, "With Natality Migration" = m_min_nat))

#natality doesn't appear to make any difference...but also, migration doesn't appear to improve the model for the subset of counties that have natality data.... this kind of makes sense .... large counties have natality data and are also resistant to the potential effects of migration 
#need to write this part up still 

```

```{r prepare data for models, include = FALSE, message = FALSE, warning = FALSE}

library(tidyverse)
library(splines)
library(ggplot2)
library(lme4)
#DATA WAS LOADED IN PREVIOUS NATALITY CHECK STEP but since that step does not need to be rerun, we can leave it here 
load("data_processed/migterm_imp.Rdata") 
#this dataset is called migurb
# it has natality, death, population, premature mortality rates, migration flows, rural/urb codes and two different precalculated migterms (one including natality and one not including natality)



migmodm = migterm_imp %>% arrange(lagyear) %>% 
  group_by(destid) %>% 
  filter(n_distinct(rate_d1)>4) #817 rows removed during this step 


mn = data.frame(migmodm)

mnn = mn %>% 
 arrange(year) %>% 
 group_by(destid) %>% 
 mutate(t = row_number())

mnn$ft = as.factor(mnn$t)






# i rescaled these vars once to confirm that the results were unchanged by the "Warning: Some predictor variables are on very different scales: consider rescaling" message 
# bic values were slightly different using standardized values, but their pattern/relative order did not change 
# mnn$rate_d0 = scale(mnn$rate_d0)
# mnn$migterm = scale(mnn$migterm)


# 
# the models below are in their most basic form - useful to justify the inclusion of splines in the next step 
# 
# #(1|fips) is a random intercept; each fips's reg line is shifted up/down randomly with mean 0
# #(1+time|fips) includes a random slope for time; the effect of time differs randomly from fips to fips 
# 
mmig = lme4::lmer(rate_d1 ~ ft + (1+t|destid) + migterm, data = mnn,
                control=lmerControl(optimizer="bobyqa",optCtrl=list(maxfun=2e5)))

# mnet = lme4::lmer(rate_d1 ~ ft + (1+t|destid) + netmig, data = mnn,
#                 control=lmerControl(optimizer="bobyqa",optCtrl=list(maxfun=2e5)))
#
# mnetf = lme4::lmer(rate_d1 ~ ft + (1+t|destid) + as.factor(netmig), data = mnn,
#                 control=lmerControl(optimizer="bobyqa",optCtrl=list(maxfun=2e5)))

mnon = lme4::lmer(rate_d1 ~ ft + rate_d0 + (1+t|destid), data = mnn,
                control=lmerControl(optimizer="bobyqa",optCtrl=list(maxfun=2e5)))

mboth = lme4::lmer(rate_d1 ~ ft + rate_d0 + (1+t|destid) + migterm, data = mnn,
                control=lmerControl(optimizer="bobyqa",optCtrl=list(maxfun=2e5)))


# BIC(mmig, mnon, mboth)

basicmodelsummaries = modelsummary::modelsummary(list("Migration" = mmig, "No Migration or Autoreg" = mnon, "Migration + Autoreg" = mboth))


# basicmodelsummaries= sjPlot::tab_model(mmig, mnon, mboth)



```

```{r spline comparison, include = FALSE, message = FALSE, warning = FALSE}

library(nlme)
library(lme4)
library(splines)
#(1|fips) is a random intercept; each fips's reg line is shifted up/down randomly with mean 0
#(1+time|fips) includes a random slope for time; the effect of time differs randomly from fips to fips 
m1_both = lme4::lmer(rate_d1 ~ ft + rate_d0 + (1+t|destid) + migterm, data = mnn,
                control=lmerControl(optimizer="bobyqa",optCtrl=list(maxfun=2e5)))



m1_nomig = lme4::lmer(rate_d1 ~ft + rate_d0 + (1+t|destid), data = mnn, 
                     control=lmerControl(optimizer="bobyqa",optCtrl=list(maxfun=2e5)))
m1_nomig2 = lme4::lmer(rate_d1 ~ft + ns(rate_d0, df = 2) + (1+t|destid), data = mnn, 
                     control=lmerControl(optimizer="bobyqa",optCtrl=list(maxfun=2e5)))
m1_nomig3 = lme4::lmer(rate_d1 ~ft + ns(rate_d0, df = 3) + (1+t|destid), data = mnn, 
                     control=lmerControl(optimizer="bobyqa",optCtrl=list(maxfun=2e5)))
m1_nomig4 = lme4::lmer(rate_d1 ~ft + ns(rate_d0, df = 4) + (1+t|destid), data = mnn, 
                     control=lmerControl(optimizer="bobyqa",optCtrl=list(maxfun=2e5)))
m1_nomig5 = lme4::lmer(rate_d1 ~ft + ns(rate_d0, df = 5) + (1+t|destid), data = mnn, 
                     control=lmerControl(optimizer="bobyqa",optCtrl=list(maxfun=2e5)))
m1_nomig6 = lme4::lmer(rate_d1 ~ft + ns(rate_d0, df = 6) + (1+t|destid), data = mnn, 
                     control=lmerControl(optimizer="bobyqa",optCtrl=list(maxfun=2e5)))
m1_nomig7 = lme4::lmer(rate_d1 ~ft + ns(rate_d0, df = 7) + (1+t|destid), data = mnn, 
                     control=lmerControl(optimizer="bobyqa",optCtrl=list(maxfun=2e5)))
m1_nomig9 = lme4::lmer(rate_d1 ~ft + ns(rate_d0, df = 9) + (1+t|destid), data = mnn, 
                     control=lmerControl(optimizer="bobyqa",optCtrl=list(maxfun=2e5)))

nomigbic = BIC(m1_nomig,m1_nomig2, m1_nomig3, m1_nomig4, m1_nomig5, m1_nomig6, m1_nomig7,m1_nomig9) 

nomigchoice = rownames(nomigbic[nomigbic$BIC == min(nomigbic$BIC),])



m1_norate = lme4::lmer(rate_d1 ~ft + migterm + (1+t|destid), data = mnn, 
                     control=lmerControl(optimizer="bobyqa",optCtrl=list(maxfun=2e5)))
m1_norate2 = lme4::lmer(rate_d1 ~ft + ns(migterm, df = 2) + (1+t|destid), data = mnn, 
                     control=lmerControl(optimizer="bobyqa",optCtrl=list(maxfun=2e5)))
m1_norate3 =lme4::lmer(rate_d1 ~ft + ns(migterm, df = 3) + (1+t|destid), data = mnn, 
                     control=lmerControl(optimizer="bobyqa",optCtrl=list(maxfun=2e5)))
m1_norate4 = lme4::lmer(rate_d1 ~ft + ns(migterm, df = 4) + (1+t|destid), data = mnn, 
                     control=lmerControl(optimizer="bobyqa",optCtrl=list(maxfun=2e5)))
m1_norate5 = lme4::lmer(rate_d1 ~ft + ns(migterm, df = 5) + (1+t|destid), data = mnn, 
                     control=lmerControl(optimizer="bobyqa",optCtrl=list(maxfun=2e5)))
m1_norate6 = lme4::lmer(rate_d1 ~ft + ns(migterm, df = 6) + (1+t|destid), data = mnn, 
                     control=lmerControl(optimizer="bobyqa",optCtrl=list(maxfun=2e5)))
m1_norate7 = lme4::lmer(rate_d1 ~ft + ns(migterm, df = 7) + (1+t|destid), data = mnn, 
                     control=lmerControl(optimizer="bobyqa",optCtrl=list(maxfun=2e5)))
m1_norate9 = lme4::lmer(rate_d1 ~ft + ns(migterm, df = 9) + (1+t|destid), data = mnn, 
                     control=lmerControl(optimizer="bobyqa",optCtrl=list(maxfun=2e5)))
noratebic = BIC(m1_norate, m1_norate2, m1_norate3, m1_norate4, m1_norate5, m1_norate6, m1_norate7,m1_norate9) 

noratechoice = rownames(noratebic[noratebic$BIC == min(noratebic$BIC),])



m1_spline1212 = lme4::lmer(rate_d1 ~ ft + ns(rate_d0,df = 12) + (1+t|destid) + ns(migterm,df = 12), data = mnn,
                control=lmerControl(optimizer="bobyqa",optCtrl=list(maxfun=2e5)))
m1_spline66 = lme4::lmer(rate_d1 ~ ft + ns(rate_d0,df = 6) + (1+t|destid) + ns(migterm,df = 6), data = mnn,
                control=lmerControl(optimizer="bobyqa",optCtrl=list(maxfun=2e5)))
m1_spline55 = lme4::lmer(rate_d1 ~ ft + ns(rate_d0,df = 5) + (1+t|destid) + ns(migterm,df = 5), data = mnn,
                control=lmerControl(optimizer="bobyqa",optCtrl=list(maxfun=2e5)))
m1_spline54 = lme4::lmer(rate_d1 ~ ft + ns(rate_d0,df = 5) + (1+t|destid) + ns(migterm,df = 4), data = mnn,
                control=lmerControl(optimizer="bobyqa",optCtrl=list(maxfun=2e5)))
m1_spline45 = lme4::lmer(rate_d1 ~ ft + ns(rate_d0,df = 4) + (1+t|destid) + ns(migterm,df = 5), data = mnn,
                control=lmerControl(optimizer="bobyqa",optCtrl=list(maxfun=2e5)))
m1_spline44 = lme4::lmer(rate_d1 ~ ft + ns(rate_d0,df = 4) + (1+t|destid) + ns(migterm,df = 4), data = mnn,
                control=lmerControl(optimizer="bobyqa",optCtrl=list(maxfun=2e5)))
m1_spline33 = lme4::lmer(rate_d1 ~ ft + ns(rate_d0,df = 3) + (1+t|destid) + ns(migterm,df = 3), data = mnn,
                control=lmerControl(optimizer="bobyqa",optCtrl=list(maxfun=2e5)))
m1_spline22 = lme4::lmer(rate_d1 ~ ft + ns(rate_d0,df = 2) + (1+t|destid) + ns(migterm,df = 2), data = mnn,
                control=lmerControl(optimizer="bobyqa",optCtrl=list(maxfun=2e5)))

allbic = BIC(m1_spline1212, m1_spline66, m1_spline55, m1_spline54, m1_spline45, m1_spline44, m1_spline33, m1_spline22, get(noratechoice), get(nomigchoice))

#when splines are inequal for rate and migterm the BIC increases 

m1_choice = rownames(allbic[allbic$BIC == min(allbic$BIC),])



modselectiontable = modelsummary::modelsummary(list("Best Fit with Migration only" = get(noratechoice), 
                                                    "Best Fit with Autoreg only" = get(nomigchoice), 
                                                    "Best Fit with Autoreg and Migration" = get(m1_choice),
                                                    "4df5df" = m1_spline45,
                                                    "5df4df" = m1_spline54, 
                                                    "5df5df" = m1_spline55, 
                                                    "3df3df" = m1_spline33, 
                                                    "6df6df" = m1_spline66))

#might be unnecessary to include all the splines here........ maybe better w just 3 cols: best fit w mig, best fit w autoreg, and best fit with autoreg and mig 

```

```{r justify exclusion of covid years, echo = FALSE, include = FALSE, warning=FALSE, message = FALSE}
nocovid = read.delim("data_raw/premature1920.txt") %>% group_by(Year) %>% summarize(medprem = median(Age.Adjusted.Rate, na.rm =TRUE))

```

### [Data]{.underline}

We use county-level estimates of premature age-adjusted mortality available through CDC WONDER[@cdcwond] joined with IRS county-to-county migration flow data[@soitax].

[The outcome of interest is county-level premature age-adjusted mortality representing the years 2011 through 2019.]{.underline} Premature mortality is defined as any death occurring before age 75. Premature mortality rates are commonly used as a gold standard when comparing various dimensions of health across counties since death has a clear and common definition[@self-rat1997; @olson-williams2023; @jylhä2009]. Additionally, premature age-adjusted mortality has important policy and health equity implications and can be used to assess which individuals or groups are likely to live longest and which individuals or groups may be most in need of additional care. We excluded the year 2020 from our analyses because<!--#  across the US, the median age-adjusted county-level premature mortality rate rose from `r nocovid$medprem[nocovid$Year == "2019"][1]` per 100,000 in 2019 to `r nocovid$medprem[nocovid$Year == "2020"][1]` per 100,000 in 2020. This unprecedented change in premature mortality is difficult to model since (commented out because the change for prmeature mort is not all that large--> the onset of the pandemic is unrelated to other factors included in our model.

[The primary explanatory factor of interest is county-level IRS migration flow from 2011 through 2019.]{.underline} In 2011, the IRS changed their methods to produce migration estimates based on a full year of income tax filings rather than a partial year. Prior to 2011, migration estimates represented between 95 and 98 percent of total annual income tax filings and excluded income taxes filed after September of each calendar year[@pierce2015]; estimates after 2011 include all annual income tax filings collected for each year. Therefore, we have chosen only to include data after the 2011 change in IRS methodology. We have chosen to use IRS rather than ACS estimates of migration for this aim because ACS does not publish single year estimates of migration (only five year estimates), and in this aim, we have chosen to emphasize the temporal aspects of migration, necessitating the use of IRS single year estimates. <!--# internal migration accounts for what percent of total migration -->

A secondary explanatory factor of interest is urbanicity. To measure urbanicity, we assign each county an urbanicity category based on the 2013 National Center for Health Statistics (NCHS) Urban--Rural Classification Scheme for Counties[@rothwell]. In an effort to improve statistical precision, we grouped these codes into rural and urban. We define rural by grouping the NCHS definitions of micropolitan and noncore such that there are `r length(unique(migterm_imp$destid[migterm_imp$rural == 1]))` counties in our rural dataset. We define urban by grouping the NCHS definitions of large central metro, large fringe metro, medium metro, and small metro such that there are `r length(unique(migterm_imp$destid[migterm_imp$rural == 0]))` counties in our urban dataset.

Certain counties were excluded from analysis. Since we are particularly interested in spatial trends in premature mortality and migration, we exclude counties from Hawaii and Alaska and include only contiguous counties. Additionally, to avoid systematically excluding counties with small population size, we impute premature mortality rates for counties with missing values. There are a total of `r length(unique(migterm_imp$destid))` US counties included in our analyses. <!--# more here about imputations?? and/or justification for imputations? -->

### [Approach]{.underline}

We test the following four hypotheses:

1.  County-to-county migration patterns improve the explainability of autoregressive models of county-level age-adjusted premature mortality. <!--# 2. The total number of years that a county has had positive net migration or negative net migration improves the explainability of autoregressive models of county-level mortality. -->

2.  County-to-county migration patterns improve the explainability of spatio-temporal autoregressive models of county-level premature age-adjusted mortality.

3.  The role that intercounty migration <!--# and net migration -->plays in county-level premature mortality differs significantly between rural and urban counties.

4.  Taking into account health-related bias in migration patterns improves our ability to explain county-level premature mortality as well as the differential role that migration plays in urban versus rural counties.

Considering the exploratory nature these hypotheses, we choose to begin by comparing our *migrational*-temporal autoregressive models with more traditional spatio-temporal models. In traditional spatio-temporal models, place-based determinants of health are regressed against themselves over time as well as against the relative health of their neighbors. Because we hypothesize that spatial correlation may be the result of intra-county migration, we first replace the spatial component of an autoregressive model with a migration component and compare.

Our baseline model is similar to simple autoregressive county-level mortality models used in the past [@yang2012]. In our baseline model, we include yearly mortality rates as a function of time (treated categorically) and premature mortality rates lagged by one year. Random intercepts and slopes in time are included to account for within-county correlation. We included random intercepts for each destination county to account for variation between counties, as recommended by Greenland and Morgenstern's assessment of best practices for ecological studies [@greenland1989]. Splines are used for mortality rates. For a given urbanicity, the baseline model (without splines) is shown below:

$$  y_{it} = \beta_0 + \beta_{1}t_{13i} + \beta_{2}t_{14i} + \beta_{3}t_{15i}  + \beta_{4}t_{16i} + \beta_{5}t_{17i} + \beta_{6}t_{18i} + \beta_{7}t_{19i} + \beta_{8} y_{t-1,i} + \upsilon_{i}t + \mu_{i} + \epsilon_{it}    $$

where\
$y_{it}$ represents the predicted age-adjusted mortality rate of each destination county $i$ at year $t$.\
$t_{yi}$ are binary factor variables for each year of available data.\
$t$ is time, in years, treated continuously.\
$\beta_j$ are unknown regression coefficients.\
$y_{t-1,i}$ is the lagged age-adjusted mortality rate for each destination county $i$ at year $t-1$.\
$\mu_{i}$ is a random intercept for each destination county $i$.\
$\upsilon_{i}$ is a random slope for the effect of time $t$ on each county $i$.\
$\epsilon_{it}$ represents an error term for each destination county $i$ at year $t$.\

For **Hypothesis 1**, we compare the baseline model to models that account for migration. To quantify migration, we develop a novel "migration term" which accounts for the mortality rates of individuals who have moved to a county of interest during a given period, essentially a weighted average of the mortality rates of all the origin counties. We calculated the following for each change in year and for each destination county $i$:

$$  mig_{it} = \frac{ \sum_{j\ne i} out_{jit} y_{j,t-1} + y_{i,t-1} (pop_{i, t-1} - \sum_{j\ne i} out_{ijt})}{ \sum_{j\ne i} out_{ijt} + (pop_{i,t-1} - \sum_{j\ne i} out_{ijt})} $$

where

$y_{it}$ was defined above\
$out_{ijt}$ represents the number of migrants from a unique origin county $j$ who migrated to a destination county $i$ between year $t-1$ and year $t$.\
$pop_{i, t-1}$ is the population of an unique destination county $i$ at initial year $t-1$\

This approach implicitly accounts for between-county selection for migration, but does not account for within-county selection of migrants. In other words, our best guess for the mortality rate of migrants is exactly the mortality rate of their original county; meanwhile, some counties are more likely to be destinations for migration than others.

Because we know county-level health to be related to county-level natality, and because our outcome variable (premature age-adjusted mortality) may not capture the health of young people in counties, we first conducted a sensitivity analysis of the effect of natality on the effect of our migration term. We determined that natality does not change the effect or explainability of the migration term and therefore does not need to be included in our models. <!--# more here??? -->

We analyzed several models and used the Bayesian Information Criterion (BIC) to determine the best fitting model. BIC is commonly used to determine models with greatest explanatory power [@kuha2004]. Starting with our baseline model, we iteratively added splines for the prior year's average county-level mortality rate and the migration term, capturing potentially nonlinear trends. The models we tested are shown in Table X in the appendix.

```{r table x here, echo = FALSE, warning = FALSE, message = FALSE}
modselectiontable
```

**To test Hypothesis 2**, we built models that accounted for spatial autocorrelation as well as migration using the <!--# splm??? --> package in R. We again compared these models using BIC.

```{r spatial stuff, echo = FALSE, warning = FALSE, message=FALSE, include = FALSE}
#first need a subset of data to make sure this is all working properly 

#even if mice is bad, it is still better than complete case only (find literature)
# document misingness well 

# how many imputed datasets? some percentage of total data - there is a standard - from leonelo clss 

#make sure to use the balanced dataset on the earlier model selection steps too 

mwi = mnn %>% filter(substr(destid, 1,2) %in% c(55,27,17,19)) %>% #wi, mn, il, ia
  filter(!is.na(rate_d1)) 

cp = tidycensus::get_acs(geography = "county", year = 2019, variables = c(tpop = "B01003_001"), survey = "acs5", state = c("WI","MN", "IA", "IL"), output = "wide", geometry = TRUE)

nyears = mwi %>% group_by(destid) %>% 
  count()

#there are two counties with 7 years of data only....
# is it better to remove the two counties or remove the 8th year....
# easier to remove the two counties because it turns out that they don't have the same 7 years of data 



cpmnn = merge(cp, mwi, by.x = "GEOID", by.y = "destid")



mwi_bal = cpmnn %>% group_by(GEOID) %>% 
  filter(year %in% c(2012:2017)) %>%  
  filter(sum(!is.na(rate_d0))==6 & sum(!is.na(migterm)) == 6 & sum(!is.na(rate_d1))==6 & sum(!is.na(ft)) == 6) %>% 
  filter(n() == 6) %>% 
  select(rate_d1, ft, rate_d0, migterm, geometry, t, GEOID)



spsub= mwi_bal %>% select(GEOID, geometry) %>% distinct()
queen = spdep::poly2nb(spsub, row.names = "GEOID", queen = T)
queenw = spdep::nb2listw(queen, style = "W", zero.policy = TRUE)

mwi_bal = plm::pdata.frame(mwi_bal, index = c("GEOID", "ft"))
mwi_bal$ft = factor(mwi_bal$ft, levels = c(1:6))


library(splm)
fm = rate_d1 ~ ft + rate_d0 + migterm

fff = rate_d1 ~ ft + ns(rate_d0, df = 4) + (1 + t | destid) + ns(migterm, df = 4)

  
wmod = splm::spml(formula = rate_d1 ~ ft + rate_d0 + migterm, data =mwi_bal, model = "random", 
                  listw = queenw, lag = TRUE, spatial.error= "none")

wmodr = splm::spreml(formula = fm, data = mwi_bal, model = "error", effects ="tpfe", 
                  w = queenw, lag = TRUE)


```

```{r function for AIC BIC of splm models, echo = FALSE, include = FALSE, message = FALSE, warning = FALSE}
# AIC and BIC function for splm object #
#copied (and then edited) from this git repository https://github.com/rfsaldanha/ecoespacialunicamp/blob/master/OLD/AICsplm.R
# at the suggestion of this stackoverflow post: https://stackoverflow.com/questions/55838656/extract-aic-from-a-fixed-effect-spatial-panel-model-estimation-result

#should probably do something to verify/ confirm that this is all good...... 

# AICsplm = function(object, k=2){ 
#   sp = summary(object)
#   l = sp$logLik
#   np = length(coef(sp))
#   N = nrow(sp$model)
#   aic = -2*l+k*np
#   names(aic) = "AIC"
#   return(aic)
# }
    
    
BICsplm = function(object, k=2){ 
  sp = summary(object)
  l = sp$logLik
  np = length(coef(sp))
  N = nrow(sp$model)
  bic = -2*l+log(N)*np
  names(bic) = "BIC"
  return(bic)
}

# BICsplm(wmod)
# BICsplm(wmodr)
# the model w random intercept is a better fit 

```

**To test Hypothesis 3**, we built separate models for urban and rural counties. This involved creating separate datasets for rural and urban counties and completing the same model selection steps as above.

When we examine trends in the difference between the migration term and destination premature mortality rate over time, we see differences across urbanicity categories. As shown on the plot below, when the migration term is larger than the destination premature mortality rate (ie positive y axis), in-migrants come from counties that are unhealthier on average than their destination county. When the migration term is smaller than the premature mortality rate (ie negative y axis), in-migrants come from counties that are healthier on average than their destination county. Based on the plot below, there is evidence that the most urban (Large Central Metro) counties are potentially most positively affected by migration while Large Fringe Metro counties are potentially most negatively affected by migration.

```{r plot of mig_it relative to y_i,t-1 , echo = FALSE, message = FALSE, warning = FALSE}

# plot here to compare mig_it to a county's starting premature mortality rate  
# then maybe want to make a plot over time for each urbanicity cateogry (similar maybe to the plot of mei over time shown in ambinakudige and parisi)   
load("data_processed/migterm_imp.Rdata") 
#called migterm_imp ... reloading to make sure nothing has changed   
migterm_imp$migmort = migterm_imp$migterm - migterm_imp$rate_d0  

groupeddata = migterm_imp %>% group_by(year, code2013) %>%    
  summarise(meddiff = median(migmort, na.rm = TRUE))   

ggplot(data = groupeddata) + 
  geom_line(aes(x = year, y = meddiff, group = factor(code2013), color = factor(code2013))) +    
  scale_color_discrete(labels = c("Large Central Metro", "Large Fringe Metro", "Medium Metro", "Small Metro", "Micropolitan", "Noncore"), name = "") +   
  xlab("Year") + 
  ylab("Median difference between migration weighted\n average and destination premature mortality rate") + 
  geom_hline(yintercept = 0, color = "black") + 
  theme_bw()  
```

Finally **to test Hypothesis 4**, we added a parameter to the premature mortality rate of each origin county within our equation for the migration term. We use this parameter to simulate selection for migration: when the parameter is subtracted (ie decreased mortality rate), we simulate migration by individuals who are healthier than the average of their origin county. When the parameter is added (ie increased mortality rate), we simulate migration by individuals who are unhealthier than the average of their origin county. Since we hypothesize that the effect of migration on county-level health differs for rural and urban counties, we test the values of this parameter separately for rural and urban counties. We then complete the same model selection steps outlined above to assess the average amount of selection for migration that best explains patterns in county-level premature mortality across contiguous US counties.

### [**Results**]{.underline}

To justify further investigation, first we determined that our migration term added explainability (as measured by low BIC score) to our most basic autoregressive model. These results are shown below.

`r basicmodelsummaries`

After concluding that the migration term did add explainability to our baseline model we then tested for splines. The best fitting model in terms of BIC score included four spline terms for both the autoregressive term and our weighted average migration term. This model will be called $modelA$. Thus, models that account for migration had more explanatory power than models that included only the prior year's average county-level mortality rate. **This confirms Hypothesis 1.** $modelA$ is shown below.

`r modelsummary::modelsummary(list("mod2A" = get(m1_choice)))`

For a more robust comparison, we then accounted for spatial autocorrelation within $modelA$.

\-- spatial things here --

We found that for both urban and rural counties, the models with the lowest BIC scores included splines with four degrees of freedom each for the migration term and lagged age-adjusted mortality as well as the net migration term factor variable. These models were very similar to $modelA$ but with four degree of freedom splines instead of five. Though the models for urban and rural counties are similar, the effect of the $migterm$ appears to differ between rural and urban counties. See **Figure X** below.

```{r create separate rural and urban datasets, include = FALSE, message = FALSE, warning = FALSE}

rural_mnn = mnn %>% filter(rural == 1) 
urban_mnn = mnn %>% filter(rural == 0)
```

```{r separate rural aim 2b, include = FALSE, message = FALSE, warning = FALSE}
library(splines)
library(lme4)



#(1|fips) is a random intercept; each fips's reg line is shifted up/down randomly with mean 0
#(1+time|fips) includes a random slope for time; the effect of time differs randomly from fips to fips 

m1 = lme4::lmer(rate_d1 ~ ft + rate_d0 + (1+t|destid) + migterm, data = rural_mnn,
                control=lmerControl(optimizer="bobyqa",optCtrl=list(maxfun=2e5)))

m1_spline44 = lme4::lmer(rate_d1 ~ ft + ns(rate_d0,df = 4) + (1+t|destid) + ns(migterm,df = 4), data = rural_mnn,
                control=lmerControl(optimizer="bobyqa",optCtrl=list(maxfun=2e5))) #this is the lowest BIC model from the previous markdown 

m1_spline33 = lme4::lmer(rate_d1 ~ ft + ns(rate_d0,df = 3) + (1+t|destid) + ns(migterm,df = 3), data = rural_mnn,
                control=lmerControl(optimizer="bobyqa",optCtrl=list(maxfun=2e5)))

m1_spline32 = lme4::lmer(rate_d1 ~ ft + ns(rate_d0,df = 3) + (1+t|destid) + ns(migterm,df = 2), data = rural_mnn,
                control=lmerControl(optimizer="bobyqa",optCtrl=list(maxfun=2e5)))

m1_spline23 = lme4::lmer(rate_d1 ~ ft + ns(rate_d0,df = 2) + (1+t|destid) + ns(migterm,df = 3), data = rural_mnn,
                control=lmerControl(optimizer="bobyqa",optCtrl=list(maxfun=2e5)))

m1_spline22 = lme4::lmer(rate_d1 ~ ft + ns(rate_d0,df = 2) + (1+t|destid) + ns(migterm,df = 2), data = rural_mnn,
                control=lmerControl(optimizer="bobyqa",optCtrl=list(maxfun=2e5)))



ruralbic = BIC(m1, m1_spline44, m1_spline33, m1_spline32, m1_spline23, m1_spline22)


rurmod = get(rownames(ruralbic[ruralbic$BIC == min(ruralbic$BIC),]))
```

```{r urb only for aim 2b, include = FALSE, message = FALSE, warning = FALSE}

#(1|fips) is a random intercept; each fips's reg line is shifted up/down randomly with mean 0
#(1+time|fips) includes a random slope for time; the effect of time differs randomly from fips to fips 
m1 = lme4::lmer(rate_d1 ~ ft + rate_d0 + (1+t|destid) + migterm, data = urban_mnn,
                control=lmerControl(optimizer="bobyqa",optCtrl=list(maxfun=2e5)))

m1_spline44 = lme4::lmer(rate_d1 ~ ft + ns(rate_d0,df = 4) + (1+t|destid) + ns(migterm,df = 4), data = urban_mnn,
                control=lmerControl(optimizer="bobyqa",optCtrl=list(maxfun=2e5))) #this is the lowest BIC model from the previous markdown 

m1_spline33 = lme4::lmer(rate_d1 ~ ft + ns(rate_d0,df = 3) + (1+t|destid) + ns(migterm,df = 3), data = urban_mnn,
                control=lmerControl(optimizer="bobyqa",optCtrl=list(maxfun=2e5)))

m1_spline32 = lme4::lmer(rate_d1 ~ ft + ns(rate_d0,df = 3) + (1+t|destid) + ns(migterm,df = 2), data = urban_mnn,
                control=lmerControl(optimizer="bobyqa",optCtrl=list(maxfun=2e5)))

m1_spline23 = lme4::lmer(rate_d1 ~ ft + ns(rate_d0,df = 2) + (1+t|destid) + ns(migterm,df = 3), data = urban_mnn,
                control=lmerControl(optimizer="bobyqa",optCtrl=list(maxfun=2e5)))

m1_spline22 = lme4::lmer(rate_d1 ~ ft + ns(rate_d0,df = 2) + (1+t|destid) + ns(migterm,df = 2), data = urban_mnn,
                control=lmerControl(optimizer="bobyqa",optCtrl=list(maxfun=2e5)))



urbanbic = BIC(m1, m1_spline44, m1_spline33, m1_spline32, m1_spline23, m1_spline22)



urbmod = get(rownames(urbanbic[urbanbic$BIC == min(urbanbic$BIC),]))



```

```{r migterm URBAN AND RURAL PLOTS zoomed, include = FALSE, message = FALSE, warning = FALSE}
   
# 
# tempdf_urban = urban_mnn[c(rep(1,14)),]
# 
# tempdf_rural = rural_mnn[c(rep(1,14)),] #dummy data - first 14 rows of original dataframe 
# 
# tempdf_urban$rate_d0 = c(seq(250, 575, by = 25)) #replace with old mortality rates 
# #tempdf$ft = as.factor(c(1:14)) #unnecessary bc we only intend to compare two years and it doesn't matter which two 
# tempdf_rural$rate_d0 =  c(seq(250, 575, by = 25))
# 
# df_rural= rbind(tempdf_rural, tempdf_rural, tempdf_rural, tempdf_rural, tempdf_rural, tempdf_rural) #need to do it this way bc rep causmiges errors 
# df_urban= rbind(tempdf_urban, tempdf_urban, tempdf_urban, tempdf_urban, tempdf_urban, tempdf_urban)
# 
# 
# #df_forpred = rbind(df_rural, df_urban) 
# 
# df_rural$migterm = c(df_rural$rate_d0[1:28] - 10, 
#                       df_rural$rate_d0[29:56] + 10, 
#                       df_rural$rate_d0[57:84])
# df_urban$migterm = c(df_urban$rate_d0[1:28] - 10, 
#                       df_urban$rate_d0[29:56] + 10, 
#                       df_urban$rate_d0[57:84]) #vary the migterm based on mortrate by 10
# 
# 
# 
# df_urban$group = c(rep(-10, 28), rep(10, 28), rep(0, 28))
# df_rural$group = c(rep(-10, 28), rep(10, 28), rep(0, 28))
# 
# 
# plotdata_rural = data.frame()
# plotdata_urban = data.frame()
# #for each variant of migterm, create a predicted value 
# 
# for (i in 1:3) {
#   gi = unique(df_rural$group)[i]
#   preddata = predict(rurmod, df_rural[df_rural$group == gi,])
#   pd = data.frame(cbind(x =  seq(250, 575, by = 25), y = preddata))
#   pd$group = gi
#   plotdata_rural = rbind(plotdata_rural, pd)
# } 
# 
# for (i in 1:3) {
#   gi = unique(df_urban$group)[i]
#   preddata = predict(urbmod, df_urban[df_urban$group == gi,])
#   pd = data.frame(cbind(x =  seq(250, 575, by = 25), y = preddata))
#   pd$group = gi
#   plotdata_urban = rbind(plotdata_urban, pd)
# } 
# 
# plotdata_urban$type = "Urban" 
# plotdata_rural$type = "Rural"
# 
# plotdata = rbind(plotdata_urban, plotdata_rural)
# plotdata$gg = paste0(plotdata$group, plotdata$type)
# 
# 
# 
# migtermplot = ggplot(plotdata, aes(x= x, y = y, group = gg, color = as.factor(group), shape = as.factor(type), alpha = as.factor(type), size = as.factor(type))) + geom_point(alpha = as.factor(plotdata$type)) + 
#   geom_line()+
#   scale_color_manual(name = "Difference between migration term\n and initial premature mortality rate", values = scales::brewer_pal("qual")(3))+
#   xlab("Potential initial premature mortality rate") + 
#   ylab("Predicted premature mortality rate") + 
#   theme_bw() +
#   geom_abline(slope = 1) + 
#   #annotate("text", x = 680, y = 660, angle = 45, label = "Reference y = x") +  
#   tune::coord_obs_pred() + 
#   labs(color = "", title = "Relationship between migration term and predicted premature mortality \namong rural and urban counties", shape = "Rural or urban", size = "Rural or urban", alpha = "Rural or urban") + 
#   scale_alpha_discrete(range = c(0.2, 1)) +
#   scale_size_discrete(range = c(0.8, 1.5)) 
# 
# migtermplot

# ggsave(plot = migtermplot, filename = "migtermplot.png", width = 3500, height = 2600, device = "tiff", dpi = 500, unit = "px")

#note that i saved this directly from the plot viewer rather than mess around with save dimensions / file types..... this does add an extra step tho if this plot ever needs to be changed..... 
```

![Figure X: Urban counties are less sensitive to the effects of $migterm$ than rural counties.](images/urb_migtermplot.png)

As shown above, urban counties appear to be less sensitive to the $migterm$ than rural counties. Migration from less healthy places (ie when $migterm - mortrate_{initial} = 10$; orange) appears to affect rural counties more greatly than urban counties. This makes sense because urban counties have greater population size making them resistant to the effects of incoming migration. However, the effect of migration from healthier counties ($migterm - mortrate_{initial} = -10$; green) appears to be similar for rural and urban counties. We see that healthy rural counties experiencing unhealthy migration experience higher (unhealthier) predicted rates than initial rates. However, unhealthy rural counties experiencing unhealthy migration experience lower (healthier) predicted rates than initial rates. Healthy rural counties experiencing healthy migration have predicted mortality rates that are approximately constant and average (\~850 deaths per 100,000 population). Meanwhile, rural counties with initial mortality rate \>850 deaths per 100,000 population that experience unhealthy migration have predicted mortality rates that are lower than their initial mortality rates (ie unhealthy rural counties become healthier, regardless of the health of migrants). This confirms **Hypothesis 3**: the effect of migration differs between rural and urban counties.

Finally, after running the same model selection steps using a simulated dataset, we conclude that a k value of XXX best explains current trends in county-level premature mortality.

<!--# need to confirm no interactions between netmig, migterm, and autoreg -->

### Discussion {.underline}

We consider several pitfalls and alternatives. First, because our migration term is essentially a weighted average of the mortality rates of origin counties, the migration term and lagged mortality rates are highly correlated, resulting in multicollinearity. As a result, we cannot easily interpret the effect of the migration term itself, other than knowing that its inclusion results in a model with more explanatory power over all. Application of results must consider this shortcoming.

Second, we selected our outcome of interest, county-level premature age-adjusted mortality, because it is comparable across years and locations and because it is consistently and robustly defined. However, in 2019, the median age of all movers across the US was under 30 years old [@s0701:g] - therefore, even when accounting for premature mortality (deaths occurring in individuals under age 75), the population that is migrating is unlikely to be the same population that is dying. Subsequently, trends in county-level premature mortality might be better explained by trends in county-level migration twenty to fifty years earlier. That said, county-level measures of premature mortality are commonly used as a proxy for county overall health. For instance, a 1983 report by the WHO recommending measures in mortality and morbidity to understand the relationship between health and migration [@gushulak2006], and measures of length of life are allocated 50% weight in the County Health Rankings Model of place-based health outcomes [@explore]. Ideally we would use a more precise age-group-specific measure of mortality paired with an age-group-specific measure of migration; however, this would require a migration data source other than the IRS migration flow data which we use here and therefore could not include analysis of the entire United States. Additionally, ideally, we would confirm our findings by assessing the health of migrants themselves. This task would require individual longitudinal data. This is not currently within the scope of this project.

One final limitation of IRS data (which we are attempting to leverage as a strength in our analyses) is that households that do not file tax returns cannot be included in migration estimates. Therefore, university students, low-income households, and workers who receive informal wages are systematically missing from IRS migration estimates[@dewaard2022]. These individuals may be more likely to be included in ACS and Census estimates [@bureau] though no population estimate is perfect. Because IRS county-to-county migration data includes only individuals who file taxes with the US government both before and after they migrate, we assume that individuals represented in the IRS migration flows data are less likely to be pushed to migrate by potentially health-related factors such as violence, famine, and corruption than individuals who migrate but are excluded from the IRS data. Therefore, any differences in changes in health between counties may be the result of self-selection by IRS-represented migrants or health-related selection by nonIRS-represented migrants. Despite these limitations, IRS migration data has been used many times in the past to complete complex and accurate analyses of US migration patterns. For instance, IRS migration flow data has been used to estimate the effects of sea-level rise on geographic distribution of the US population[@hauer2017], measure recovery after Hurricanes Katrina and Rita[@curtis2015], and assess the economic impacts of migration resulting from environmental hazards [@shumway2014].

### [**Conclusion**]{.underline}

We cannot fully understand county-level health without first understanding county interconnectedness and how it drives place-based health disparities. Recognizing that the United States is heterogeneous and that the mechanisms by which migration may impact health may also be heterogeneous, we attempt to quantify rural-urban disparities in mobility and health at each step. The long-term goal of this work is to contribute to understanding the mechanisms by which mobility may be related to place-based health disparities so that local decision-makers may account for patterns in mobility when creating policy towards improved health for all people in all places. Understanding rural-urban mobility patterns is a necessary first step towards understanding rural-urban health disparities.

------------------------------------------------------------------------

```{r SCRATCH TRASH, include = FALSE, echo = FALSE}
# load("data_processed/migtree.Rdata") #this dataset is called ppu2 for some reason 
# #urb codes are here already 
# #this contains data for 12 unique time periods: 0809 through 1920 
# 
# 
# load("data_processed/migterm.Rdata") # this dataset is called migterm 
# # this contains data for 2011 through 2019; it includes the already calcd migterm 
# 
# 
# 
# #need to remove years prior to 2011 due to IRS methodology change 
# netmig = ppu2 %>% filter(year>=1112 & year <= 1819)  %>% 
#   group_by(origid, urbcode) %>% summarize(netmig = sum(pn_mig))
# #netmig = the total number of years that an origid had net migration between 1112 and 1819 (ie 9 unique time periods)
# 
# 
# #need to remove years prior to 2011 due to IRS methodology change 
# migterm = migterm %>% filter(lagyear >=2011)
# # 
# netmigterm = merge(migterm, netmig, by.x = "destid", by.y = "origid", all.x = TRUE)
# #there are 22 obs lost during this merge (5 unique destids) 
# #these are the result of fipscodes changes - they can be corrected later; ignoring for now since it's already impossible to have a perfect 3142 county dataset 
# netmigterm = netmigterm[!is.na(netmigterm$urbcode),] 
# netmigterm = netmigterm[!is.na(netmigterm$migterm),] #none lost during this step 
# netmigterm = netmigterm[!is.na(netmigterm$netmig),] #none lost during this step 
# 
# 



```

```{r netmig plot, echo = FALSE, include = FALSE, message = FALSE, warning = FALSE}
   #not currently in use 
# 
# tempdf_urban = urban_mnn[c(rep(1,14)),]
# 
# tempdf_rural = rural_mnn[c(rep(1,14)),] #dummy data - first 14 rows of original dataframe 
# 
# tempdf_urban$rate_d0 = c(seq(600, 1250, by = 50)) #replace with old mortality rates 
# #tempdf$ft = as.factor(c(1:14)) #unnecessary bc we only intend to compare two years and it doesn't matter which two 
# tempdf_rural$rate_d0 =  c(seq(600, 1250, by = 50))
# 
# df_rural= rbind(tempdf_rural, tempdf_rural, tempdf_rural, tempdf_rural, tempdf_rural, tempdf_rural, tempdf_rural, tempdf_rural) #need to do it this way bc rep causes errors 
# df_urban= rbind(tempdf_urban, tempdf_urban, tempdf_urban, tempdf_urban, tempdf_urban, tempdf_urban, tempdf_urban, tempdf_urban)
# 
# 
# df_rural$migterm = df_rural$rate_d0
# df_urban$migterm = df_urban$rate_d0
# # df_rural$migterm = c(df_rural$rate_d0[1:28] - 10, 
# #                       df_rural$rate_d0[29:56] + 10, 
# #                       df_rural$rate_d0[57:84])
# # df_urban$migterm = c(df_urban$rate_d0[1:28] - 10, 
# #                       df_urban$rate_d0[29:56] + 10, 
# #                       df_urban$rate_d0[57:84]) #vary the migterm based on mortrate by 10
# # 
# 
# 
# df_urban$group = c(rep(-8, 14), rep(-6, 14), rep(-2, 14), rep(0, 14), rep(2, 14), rep(4, 14), rep(6, 14), rep(8, 14))
# df_rural$group = c(rep(-8, 14), rep(-6, 14), rep(-2, 14), rep(0, 14), rep(2, 14), rep(4, 14), rep(6, 14), rep(8, 14))
# 
# df_urban$netmig = df_urban$group
# df_rural$netmig = df_rural$group
# 
# plotdata_rural = data.frame()
# plotdata_urban = data.frame()
# #for each variant of migterm, create a predicted value 
# 
# for (i in 1:8) {
#   gi = unique(df_rural$group)[i]
#   preddata = predict(rurmod, df_rural[df_rural$group == gi,])
#   pd = data.frame(cbind(x =  seq(600, 1250, by = 50), y = preddata))
#   pd$group = gi
#   plotdata_rural = rbind(plotdata_rural, pd)
# } 
# 
# for (i in 1:8) {
#   gi = unique(df_urban$group)[i]
#   preddata = predict(urbmod, df_urban[df_urban$group == gi,])
#   pd = data.frame(cbind(x =  seq(600, 1250, by = 50), y = preddata))
#   pd$group = gi
#   plotdata_urban = rbind(plotdata_urban, pd)
# } 
# 
# plotdata_urban$type = "urban" 
# plotdata_rural$type = "rural"
# 
# plotdata = rbind(plotdata_urban, plotdata_rural)
# plotdata$gg = paste0(plotdata$group, plotdata$type)
# 
# 
# 
# ggplot(plotdata, aes(x= x, y = y, group = gg, color = as.factor(group), shape = as.factor(type), alpha = as.factor(type), linetype = as.factor(type), size = as.factor(type))) + geom_point(alpha = as.factor(plotdata$type)) + 
#   geom_line()+
#   scale_color_manual(name = "Net migration over the past 8 years", values = scales::brewer_pal("seq")(8))+
#   xlab("Potential initial mortality rate") + 
#   ylab("Predicted mortality rate") + 
#   theme_bw() +
#   geom_abline(slope = 1) + 
#   coord_cartesian(ylim=c(700,1000))+
#   annotate("text", x = 930, y = 970, angle = 60, label = "Reference y = x") +  
#   #tune::coord_obs_pred() + 
#   labs(color = "", title = "Relationship between net migration and predicted mortality among rural and urban counties", shape = "Rural or urban", size = "Rural or urban", alpha = "Rural or urban", linetype = "Rural or urban", 
#        caption = "Figure 3: The effect of net migration does not appear to differ substantially between rural and urban counties") + 
#   scale_alpha_discrete(range = c(0.2, 1)) +
#   scale_size_discrete(range = c(0.8, 1.5)) +
#   theme(plot.caption = element_text(hjust =0))


```
